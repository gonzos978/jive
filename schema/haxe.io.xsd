<xs:schema targetNamespace="haxe.io" xmlns="haxe.io" xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns:openfl-utils="openfl.utils"
xmlns:empty="empty"
xmlns:sys-io-_Process="sys.io._Process"
xmlns:lime-utils="lime.utils"
>
<xs:import namespace="openfl.utils" schemaLocation="openfl.utils.xsd" />
<xs:import namespace="empty" schemaLocation="empty.xsd" />
<xs:import namespace="sys.io._Process" schemaLocation="sys.io._Process.xsd" />
<xs:import namespace="lime.utils" schemaLocation="lime.utils.xsd" />
<xs:complexType name="PathSchemaTypeValue">
<xs:all><xs:element ref="Path"/></xs:all></xs:complexType>

<xs:complexType name="InputSchemaTypeValue">
<xs:choice>
<xs:element ref="sys-io-_Process:Stdout" />
<xs:element ref="Input" />
</xs:choice>
</xs:complexType>

<xs:complexType name="EofSchemaTypeValue">
<xs:all><xs:element ref="Eof"/></xs:all></xs:complexType>

<xs:complexType name="OutputSchemaTypeValue">
<xs:choice>
<xs:element ref="sys-io-_Process:Stdin" />
<xs:element ref="Output" />
</xs:choice>
</xs:complexType>

<xs:complexType name="BytesSchemaTypeValue">
<xs:choice>
<xs:element ref="lime-utils:Bytes" />
<xs:element ref="openfl-utils:ByteArrayData" />
<xs:element ref="Bytes" />
</xs:choice>
</xs:complexType>

<xs:complexType name="Unsigned_char__SchemaTypeValue">
<xs:all><xs:element ref="Unsigned_char__"/></xs:all></xs:complexType>

<xs:complexType name="BytesBufferSchemaTypeValue">
<xs:all><xs:element ref="BytesBuffer"/></xs:all></xs:complexType>

<xs:complexType name="PathSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="dir" type="xs:string"/>
<xs:element minOccurs="0" name="file" type="xs:string"/>
<xs:element minOccurs="0" name="ext" type="xs:string"/>
<xs:element minOccurs="0" name="backslash" type="xs:boolean"/>
</xs:all>
<xs:attribute name="dir" type="xs:string"/>
<xs:attribute name="file" type="xs:string"/>
<xs:attribute name="ext" type="xs:string"/>
<xs:attribute name="backslash" type="xs:boolean"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="InputSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="EofSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="OutputSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="BytesSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="length" type="xs:int"/>
</xs:all>
<xs:attribute name="length" type="xs:int"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="Unsigned_char__SchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="BytesBufferSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="length" type="xs:int"/>
</xs:all>
<xs:attribute name="length" type="xs:int"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>


<xs:element name="Path" type="PathSchemaType"/>
<xs:element name="Input" type="InputSchemaType"/>
<xs:element name="Eof" type="EofSchemaType"/>
<xs:element name="Output" type="OutputSchemaType"/>
<xs:element name="Bytes" type="BytesSchemaType"/>
<xs:element name="Unsigned_char__" type="Unsigned_char__SchemaType"/>
<xs:element name="BytesBuffer" type="BytesBufferSchemaType"/>
</xs:schema>
