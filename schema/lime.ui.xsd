<xs:schema targetNamespace="lime.ui" xmlns="lime.ui" xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns:lime-system="lime.system"
xmlns:empty="empty"
xmlns:openfl-display="openfl.display"
xmlns:lime-graphics="lime.graphics"
xmlns:lime-app="lime.app"
>
<xs:import namespace="lime.system" schemaLocation="lime.system.xsd" />
<xs:import namespace="empty" schemaLocation="empty.xsd" />
<xs:import namespace="openfl.display" schemaLocation="openfl.display.xsd" />
<xs:import namespace="lime.graphics" schemaLocation="lime.graphics.xsd" />
<xs:import namespace="lime.app" schemaLocation="lime.app.xsd" />
<xs:complexType name="WindowSchemaTypeValue">
<xs:choice>
<xs:element ref="openfl-display:Window" />
<xs:element ref="Window" />
</xs:choice>
</xs:complexType>

<xs:complexType name="GamepadSchemaTypeValue">
<xs:all><xs:element ref="Gamepad"/></xs:all></xs:complexType>

<xs:complexType name="JoystickSchemaTypeValue">
<xs:all><xs:element ref="Joystick"/></xs:all></xs:complexType>

<xs:complexType name="TouchSchemaTypeValue">
<xs:all><xs:element ref="Touch"/></xs:all></xs:complexType>

<xs:complexType name="WindowSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="application" type="lime-app:ApplicationSchemaTypeValue"/>
<xs:element minOccurs="0" name="config" type="xs:string"/>
<xs:element minOccurs="0" name="display" type="lime-system:DisplaySchemaTypeValue"/>
<xs:element minOccurs="0" name="enableTextEvents" type="xs:boolean"/>
<xs:element minOccurs="0" name="fullscreen" type="xs:boolean"/>
<xs:element minOccurs="0" name="height" type="xs:int"/>
<xs:element minOccurs="0" name="id" type="xs:int"/>
<xs:element minOccurs="0" name="minimized" type="xs:boolean"/>
<xs:element minOccurs="0" name="onActivate" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onClose" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onCreate" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onDeactivate" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onEnter" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onFocusIn" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onFocusOut" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onFullscreen" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onKeyDown" type="lime-app:Event_lime_ui_KeyCode_lime_ui_KeyModifier_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onKeyUp" type="lime-app:Event_lime_ui_KeyCode_lime_ui_KeyModifier_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onLeave" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onMinimize" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onMouseDown" type="lime-app:Event_Float_Float_Int_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onMouseMove" type="lime-app:Event_Float_Float_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onMouseMoveRelative" type="lime-app:Event_Float_Float_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onMouseUp" type="lime-app:Event_Float_Float_Int_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onMouseWheel" type="lime-app:Event_Float_Float_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onMove" type="lime-app:Event_Float_Float_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onResize" type="lime-app:Event_Int_Int_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onRestore" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onTextEdit" type="lime-app:Event_String_Int_Int_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onTextInput" type="lime-app:Event_String_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="renderer" type="lime-graphics:RendererSchemaTypeValue"/>
<xs:element minOccurs="0" name="scale" type="xs:double"/>
<xs:element minOccurs="0" name="stage" type="xs:string"/>
<xs:element minOccurs="0" name="title" type="xs:string"/>
<xs:element minOccurs="0" name="width" type="xs:int"/>
<xs:element minOccurs="0" name="x" type="xs:int"/>
<xs:element minOccurs="0" name="y" type="xs:int"/>
</xs:all>
<xs:attribute name="application" type="xs:string"/>
<xs:attribute name="config" type="xs:string"/>
<xs:attribute name="display" type="xs:string"/>
<xs:attribute name="enableTextEvents" type="xs:boolean"/>
<xs:attribute name="fullscreen" type="xs:boolean"/>
<xs:attribute name="height" type="xs:int"/>
<xs:attribute name="id" type="xs:int"/>
<xs:attribute name="minimized" type="xs:boolean"/>
<xs:attribute name="onActivate" type="xs:string"/>
<xs:attribute name="onClose" type="xs:string"/>
<xs:attribute name="onCreate" type="xs:string"/>
<xs:attribute name="onDeactivate" type="xs:string"/>
<xs:attribute name="onEnter" type="xs:string"/>
<xs:attribute name="onFocusIn" type="xs:string"/>
<xs:attribute name="onFocusOut" type="xs:string"/>
<xs:attribute name="onFullscreen" type="xs:string"/>
<xs:attribute name="onKeyDown" type="xs:string"/>
<xs:attribute name="onKeyUp" type="xs:string"/>
<xs:attribute name="onLeave" type="xs:string"/>
<xs:attribute name="onMinimize" type="xs:string"/>
<xs:attribute name="onMouseDown" type="xs:string"/>
<xs:attribute name="onMouseMove" type="xs:string"/>
<xs:attribute name="onMouseMoveRelative" type="xs:string"/>
<xs:attribute name="onMouseUp" type="xs:string"/>
<xs:attribute name="onMouseWheel" type="xs:string"/>
<xs:attribute name="onMove" type="xs:string"/>
<xs:attribute name="onResize" type="xs:string"/>
<xs:attribute name="onRestore" type="xs:string"/>
<xs:attribute name="onTextEdit" type="xs:string"/>
<xs:attribute name="onTextInput" type="xs:string"/>
<xs:attribute name="renderer" type="xs:string"/>
<xs:attribute name="scale" type="xs:double"/>
<xs:attribute name="stage" type="xs:string"/>
<xs:attribute name="title" type="xs:string"/>
<xs:attribute name="width" type="xs:int"/>
<xs:attribute name="x" type="xs:int"/>
<xs:attribute name="y" type="xs:int"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="GamepadSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="connected" type="xs:boolean"/>
<xs:element minOccurs="0" name="guid" type="xs:string"/>
<xs:element minOccurs="0" name="id" type="xs:int"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="onAxisMove" type="lime-app:Event_lime_ui_GamepadAxis_Float_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onButtonDown" type="lime-app:Event_lime_ui_GamepadButton_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onButtonUp" type="lime-app:Event_lime_ui_GamepadButton_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onDisconnect" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
</xs:all>
<xs:attribute name="connected" type="xs:boolean"/>
<xs:attribute name="guid" type="xs:string"/>
<xs:attribute name="id" type="xs:int"/>
<xs:attribute name="name" type="xs:string"/>
<xs:attribute name="onAxisMove" type="xs:string"/>
<xs:attribute name="onButtonDown" type="xs:string"/>
<xs:attribute name="onButtonUp" type="xs:string"/>
<xs:attribute name="onDisconnect" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="JoystickSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="connected" type="xs:boolean"/>
<xs:element minOccurs="0" name="guid" type="xs:string"/>
<xs:element minOccurs="0" name="id" type="xs:int"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="numAxes" type="xs:int"/>
<xs:element minOccurs="0" name="numButtons" type="xs:int"/>
<xs:element minOccurs="0" name="numHats" type="xs:int"/>
<xs:element minOccurs="0" name="numTrackballs" type="xs:int"/>
<xs:element minOccurs="0" name="onAxisMove" type="lime-app:Event_Int_Float_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onButtonDown" type="lime-app:Event_Int_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onButtonUp" type="lime-app:Event_Int_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onDisconnect" type="lime-app:Event_Void_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onHatMove" type="lime-app:Event_Int_lime_ui_JoystickHatPosition_VoidSchemaTypeValue"/>
<xs:element minOccurs="0" name="onTrackballMove" type="lime-app:Event_Int_Float_VoidSchemaTypeValue"/>
</xs:all>
<xs:attribute name="connected" type="xs:boolean"/>
<xs:attribute name="guid" type="xs:string"/>
<xs:attribute name="id" type="xs:int"/>
<xs:attribute name="name" type="xs:string"/>
<xs:attribute name="numAxes" type="xs:int"/>
<xs:attribute name="numButtons" type="xs:int"/>
<xs:attribute name="numHats" type="xs:int"/>
<xs:attribute name="numTrackballs" type="xs:int"/>
<xs:attribute name="onAxisMove" type="xs:string"/>
<xs:attribute name="onButtonDown" type="xs:string"/>
<xs:attribute name="onButtonUp" type="xs:string"/>
<xs:attribute name="onDisconnect" type="xs:string"/>
<xs:attribute name="onHatMove" type="xs:string"/>
<xs:attribute name="onTrackballMove" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="TouchSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="device" type="xs:int"/>
<xs:element minOccurs="0" name="dx" type="xs:double"/>
<xs:element minOccurs="0" name="dy" type="xs:double"/>
<xs:element minOccurs="0" name="id" type="xs:int"/>
<xs:element minOccurs="0" name="pressure" type="xs:double"/>
<xs:element minOccurs="0" name="x" type="xs:double"/>
<xs:element minOccurs="0" name="y" type="xs:double"/>
</xs:all>
<xs:attribute name="device" type="xs:int"/>
<xs:attribute name="dx" type="xs:double"/>
<xs:attribute name="dy" type="xs:double"/>
<xs:attribute name="id" type="xs:int"/>
<xs:attribute name="pressure" type="xs:double"/>
<xs:attribute name="x" type="xs:double"/>
<xs:attribute name="y" type="xs:double"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>


<xs:element name="Window" type="WindowSchemaType"/>
<xs:element name="Gamepad" type="GamepadSchemaType"/>
<xs:element name="Joystick" type="JoystickSchemaType"/>
<xs:element name="Touch" type="TouchSchemaType"/>
</xs:schema>
