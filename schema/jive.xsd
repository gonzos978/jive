<xs:schema targetNamespace="jive" xmlns="jive" xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns:bindx="bindx"
xmlns:openfl-events="openfl.events"
xmlns:jive-image="jive.image"
xmlns:jive-themes="jive.themes"
xmlns:jive-geom="jive.geom"
xmlns:openfl-display="openfl.display"
xmlns:empty="empty"
>
<xs:import namespace="bindx" schemaLocation="bindx.xsd" />
<xs:import namespace="openfl.events" schemaLocation="openfl.events.xsd" />
<xs:import namespace="jive.image" schemaLocation="jive.image.xsd" />
<xs:import namespace="jive.themes" schemaLocation="jive.themes.xsd" />
<xs:import namespace="jive.geom" schemaLocation="jive.geom.xsd" />
<xs:import namespace="openfl.display" schemaLocation="openfl.display.xsd" />
<xs:import namespace="empty" schemaLocation="empty.xsd" />
<xs:complexType name="FlowSchemaTypeValue">
<xs:all><xs:element ref="Flow"/></xs:all></xs:complexType>

<xs:complexType name="DataContextControllableSchemaTypeValue">
<xs:all><xs:element ref="DataContextControllable"/></xs:all></xs:complexType>

<xs:complexType name="SvgSchemaTypeValue">
<xs:all><xs:element ref="Svg"/></xs:all></xs:complexType>

<xs:complexType name="ComponentSchemaTypeValue">
<xs:choice>
<xs:element ref="jive-image:Image" />
<xs:element ref="jive-image:AssetImage" />
<xs:element ref="Flow" />
<xs:element ref="Svg" />
<xs:element ref="Container" />
<xs:element ref="Window" />
<xs:element ref="EmptyLayout" />
<xs:element ref="Swiper" />
<xs:element ref="TemplatedComponent" />
<xs:element ref="Component" />
</xs:choice>
</xs:complexType>

<xs:complexType name="ColorSchemaTypeValue">
<xs:all><xs:element ref="Color"/></xs:all></xs:complexType>

<xs:complexType name="SwiperSchemaTypeValue">
<xs:all><xs:element ref="Swiper"/></xs:all></xs:complexType>

<xs:complexType name="TemplatedComponentSchemaTypeValue">
<xs:all><xs:element ref="TemplatedComponent"/></xs:all></xs:complexType>

<xs:complexType name="ContainerSchemaTypeValue">
<xs:choice>
<xs:element ref="Flow" />
<xs:element ref="Window" />
<xs:element ref="EmptyLayout" />
<xs:element ref="Swiper" />
<xs:element ref="Container" />
</xs:choice>
</xs:complexType>

<xs:complexType name="JiveSchemaTypeValue">
<xs:all><xs:element ref="Jive"/></xs:all></xs:complexType>

<xs:complexType name="WindowSchemaTypeValue">
<xs:all><xs:element ref="Window"/></xs:all></xs:complexType>

<xs:complexType name="CommandSchemaTypeValue">
<xs:choice>
<xs:element ref="BaseCommand" />
</xs:choice>
</xs:complexType>

<xs:complexType name="EmptyLayoutSchemaTypeValue">
<xs:choice>
<xs:element ref="Flow" />
<xs:element ref="EmptyLayout" />
</xs:choice>
</xs:complexType>

<xs:complexType name="ViewModelSchemaTypeValue">
<xs:all><xs:element ref="ViewModel"/></xs:all></xs:complexType>

<xs:complexType name="CollectionSchemaTypeValue">
<xs:all><xs:element ref="Collection"/></xs:all></xs:complexType>

<xs:complexType name="BaseCommandSchemaTypeValue">
<xs:all><xs:element ref="BaseCommand"/></xs:all></xs:complexType>

<xs:complexType name="FlowSchemaType">
<xs:complexContent>
<xs:extension base="EmptyLayoutSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="DataContextControllableSchemaType">
<xs:complexContent>
<xs:extension base="bindx:IBindableSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="dataContext" type="xs:string"/>
</xs:all>
<xs:attribute name="dataContext" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="SvgSchemaType">
<xs:complexContent>
<xs:extension base="ComponentSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="generateContent" type="xs:string"/>
<xs:element minOccurs="0" name="content" type="xs:string"/>
</xs:all>
<xs:attribute name="generateContent" type="xs:string"/>
<xs:attribute name="content" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="ComponentSchemaType">
<xs:complexContent>
<xs:extension base="openfl-events:EventDispatcherSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="x" type="xs:string"/>
<xs:element minOccurs="0" name="y" type="xs:string"/>
<xs:element minOccurs="0" name="width" type="xs:string"/>
<xs:element minOccurs="0" name="height" type="xs:string"/>
<xs:element minOccurs="0" name="margin" type="jive-geom:MetricInsetsSchemaTypeValue"/>
<xs:element minOccurs="0" name="dimension" type="jive-geom:IntDimensionSchemaTypeValue"/>
<xs:element minOccurs="0" name="rotationAngle" type="xs:double"/>
<xs:element minOccurs="0" name="rotationPivot" type="jive-geom:IntPointSchemaTypeValue"/>
<xs:element minOccurs="0" name="alpha" type="xs:double"/>
<xs:element minOccurs="0" name="displayObject" type="openfl-display:DisplayObjectSchemaTypeValue"/>
<xs:element minOccurs="0" name="parent" type="ContainerSchemaTypeValue"/>
<xs:element minOccurs="0" name="absoluteWidth" type="xs:int"/>
<xs:element minOccurs="0" name="absoluteHeight" type="xs:int"/>
<xs:element minOccurs="0" name="absoluteX" type="xs:int"/>
<xs:element minOccurs="0" name="absoluteY" type="xs:int"/>
</xs:all>
<xs:attribute name="x" type="xs:string"/>
<xs:attribute name="y" type="xs:string"/>
<xs:attribute name="width" type="xs:string"/>
<xs:attribute name="height" type="xs:string"/>
<xs:attribute name="margin" type="xs:string"/>
<xs:attribute name="dimension" type="xs:string"/>
<xs:attribute name="rotationAngle" type="xs:double"/>
<xs:attribute name="rotationPivot" type="xs:string"/>
<xs:attribute name="alpha" type="xs:double"/>
<xs:attribute name="displayObject" type="xs:string"/>
<xs:attribute name="parent" type="xs:string"/>
<xs:attribute name="absoluteWidth" type="xs:int"/>
<xs:attribute name="absoluteHeight" type="xs:int"/>
<xs:attribute name="absoluteX" type="xs:int"/>
<xs:attribute name="absoluteY" type="xs:int"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="ColorSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="rgb" type="xs:int"/>
<xs:element minOccurs="0" name="alpha" type="xs:double"/>
</xs:all>
<xs:attribute name="rgb" type="xs:int"/>
<xs:attribute name="alpha" type="xs:double"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="SwiperSchemaType">
<xs:complexContent>
<xs:extension base="ContainerSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="TemplatedComponentSchemaType">
<xs:complexContent>
<xs:extension base="ComponentSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="templateInstance" type="xs:string"/>
<xs:element minOccurs="0" name="template" type="xs:string"/>
<xs:element minOccurs="0" name="templateModel" type="xs:string"/>
</xs:all>
<xs:attribute name="templateInstance" type="xs:string"/>
<xs:attribute name="template" type="xs:string"/>
<xs:attribute name="templateModel" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="ContainerSchemaType">
<xs:complexContent>
<xs:extension base="ComponentSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" ref="jive-image:Image" />
<xs:element minOccurs="0" ref="jive-image:AssetImage" />
<xs:element minOccurs="0" ref="Flow" />
<xs:element minOccurs="0" ref="Svg" />
<xs:element minOccurs="0" ref="Container" />
<xs:element minOccurs="0" ref="Window" />
<xs:element minOccurs="0" ref="EmptyLayout" />
<xs:element minOccurs="0" ref="Swiper" />
<xs:element minOccurs="0" ref="TemplatedComponent" />
<xs:element minOccurs="0" ref="Component" />
<xs:element minOccurs="0" name="displayObjectContainer" type="xs:string"/>
<xs:element minOccurs="0" name="children" type="CollectionSchemaTypeValue"/>
</xs:all>
<xs:attribute name="displayObjectContainer" type="xs:string"/>
<xs:attribute name="children" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="JiveSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="WindowSchemaType">
<xs:complexContent>
<xs:extension base="ContainerSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="opened" type="xs:boolean"/>
</xs:all>
<xs:attribute name="opened" type="xs:boolean"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="CommandSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="EmptyLayoutSchemaType">
<xs:complexContent>
<xs:extension base="ContainerSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="ViewModelSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="theme" type="jive-themes:ThemeSchemaTypeValue"/>
</xs:all>
<xs:attribute name="theme" type="xs:string"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="CollectionSchemaType">
<xs:complexContent>
<xs:extension base="openfl-events:EventDispatcherSchemaType">
<xs:all minOccurs='0'>
<xs:element minOccurs="0" name="length" type="xs:int"/>
</xs:all>
<xs:attribute name="length" type="xs:int"/>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="BaseCommandSchemaType">
<xs:complexContent>
<xs:extension base="empty:RootObjectTypeSchemaType">
<xs:all minOccurs='0'>
</xs:all>
</xs:extension>
</xs:complexContent>
</xs:complexType>


<xs:element name="Flow" type="FlowSchemaType"/>
<xs:element name="DataContextControllable" type="DataContextControllableSchemaType"/>
<xs:element name="Svg" type="SvgSchemaType"/>
<xs:element name="Component" type="ComponentSchemaType"/>
<xs:element name="Color" type="ColorSchemaType"/>
<xs:element name="Swiper" type="SwiperSchemaType"/>
<xs:element name="TemplatedComponent" type="TemplatedComponentSchemaType"/>
<xs:element name="Container" type="ContainerSchemaType"/>
<xs:element name="Jive" type="JiveSchemaType"/>
<xs:element name="Window" type="WindowSchemaType"/>
<xs:element name="Command" type="CommandSchemaType"/>
<xs:element name="EmptyLayout" type="EmptyLayoutSchemaType"/>
<xs:element name="ViewModel" type="ViewModelSchemaType"/>
<xs:element name="Collection" type="CollectionSchemaType"/>
<xs:element name="BaseCommand" type="BaseCommandSchemaType"/>
</xs:schema>
